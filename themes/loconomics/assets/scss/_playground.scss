/**
 * Playground: try new styles without think on the organization and naming,
 * for Work In Progress, BUT REMEMBER you move them to proper file linked at
 * main.scss when is stable and remove trials (this file should be empty when
 * releasing to production).
 *
 * REMEMBER: theme.scss and Boostrap variables are available (check that files for reference).
 * Overrides to global variables should be done directly at theme.scss even if just
 * testing.
 */

/// Custom resets (remember we have loaded Bootstrap4-reboot styles)
// TODO: Should we reset this or just use list-unstyled class on wanted elements?
ul { list-style: none; }
// TODO: Review, I vote to remove this since Bootstrap have a variable for this ($link-color)
// that applies properly and without the 'important' modifier --that will cause problems;
// I prefer we set links to white just in the cases we really want that, and keep others
// in the default ('primary') color. Some usages of links mixed with text without differentiation
// could lead to a an accessibility issue.
a { color: #fff !important; }

/// Color classes utilities
// TODO: Prefer semantic names
// TODO: Bootstrap defines $light variable for a common light gray, prefer to override
// that color at theme.scss rather than create several versions (for consistency); it
// evens defines 9 levels of gray $gray-100 to $gray-200 being $gray-100 used for $light
$color-lightgray: #f4f4f6;
// TODO: Bootstrap defines a $blue and the semantic color $primary (defaults to $blue),
// being semantic names preferred. Then, if this blue color is the same wanted as general
// primary color, should be overrided at theme.scss and use the Bootstrap class utility.
$color-blue: rgb(40, 127, 198);

// TODO: Review, this change is too global, should be a Bootstrap variable change
// if exist or a reset at main.scss if really should be global, or scoped into a
// section/component/page otherwise
p {
    color: #959595;
}
